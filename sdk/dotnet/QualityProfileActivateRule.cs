// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    [SonarqubeResourceType("sonarqube:index/qualityProfileActivateRule:QualityProfileActivateRule")]
    public partial class QualityProfileActivateRule : Pulumi.CustomResource
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Output("params")]
        public Output<string?> Params { get; private set; } = null!;

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Output("reset")]
        public Output<string?> Reset { get; private set; } = null!;

        /// <summary>
        /// Rule key
        /// </summary>
        [Output("rule")]
        public Output<string> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule severity
        /// </summary>
        [Output("severity")]
        public Output<string?> Severity { get; private set; } = null!;


        /// <summary>
        /// Create a QualityProfileActivateRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QualityProfileActivateRule(string name, QualityProfileActivateRuleArgs args, CustomResourceOptions? options = null)
            : base("sonarqube:index/qualityProfileActivateRule:QualityProfileActivateRule", name, args ?? new QualityProfileActivateRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QualityProfileActivateRule(string name, Input<string> id, QualityProfileActivateRuleState? state = null, CustomResourceOptions? options = null)
            : base("sonarqube:index/qualityProfileActivateRule:QualityProfileActivateRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QualityProfileActivateRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QualityProfileActivateRule Get(string name, Input<string> id, QualityProfileActivateRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new QualityProfileActivateRule(name, id, state, options);
        }
    }

    public sealed class QualityProfileActivateRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Input("params")]
        public Input<string>? Params { get; set; }

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Input("reset")]
        public Input<string>? Reset { get; set; }

        /// <summary>
        /// Rule key
        /// </summary>
        [Input("rule", required: true)]
        public Input<string> Rule { get; set; } = null!;

        /// <summary>
        /// Rule severity
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public QualityProfileActivateRuleArgs()
        {
        }
    }

    public sealed class QualityProfileActivateRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Input("params")]
        public Input<string>? Params { get; set; }

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Input("reset")]
        public Input<string>? Reset { get; set; }

        /// <summary>
        /// Rule key
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule severity
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public QualityProfileActivateRuleState()
        {
        }
    }
}
