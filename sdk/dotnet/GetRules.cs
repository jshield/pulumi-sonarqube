// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    public static class GetRules
    {
        public static Task<GetRulesResult> InvokeAsync(GetRulesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRulesResult>("sonarqube:index/getRules:getRules", args ?? new GetRulesArgs(), options.WithDefaults());

        public static Output<GetRulesResult> Invoke(GetRulesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRulesResult>("sonarqube:index/getRules:getRules", args ?? new GetRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRulesArgs : Pulumi.InvokeArgs
    {
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        public GetRulesArgs()
        {
        }
    }

    public sealed class GetRulesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        public GetRulesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Key;
        public readonly string MarkdownDescription;
        public readonly string Name;
        public readonly string Severity;
        public readonly string Status;
        public readonly string TemplateKey;
        public readonly string Type;

        [OutputConstructor]
        private GetRulesResult(
            string id,

            string key,

            string markdownDescription,

            string name,

            string severity,

            string status,

            string templateKey,

            string type)
        {
            Id = id;
            Key = key;
            MarkdownDescription = markdownDescription;
            Name = name;
            Severity = severity;
            Status = status;
            TemplateKey = templateKey;
            Type = type;
        }
    }
}
