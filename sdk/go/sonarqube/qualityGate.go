// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sonarqube

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QualityGate struct {
	pulumi.CustomResourceState

	// Name of the quality gate to set as default
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	Name      pulumi.StringOutput  `pulumi:"name"`
}

// NewQualityGate registers a new resource with the given unique name, arguments, and options.
func NewQualityGate(ctx *pulumi.Context,
	name string, args *QualityGateArgs, opts ...pulumi.ResourceOption) (*QualityGate, error) {
	if args == nil {
		args = &QualityGateArgs{}
	}

	var resource QualityGate
	err := ctx.RegisterResource("sonarqube:index/qualityGate:QualityGate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQualityGate gets an existing QualityGate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQualityGate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QualityGateState, opts ...pulumi.ResourceOption) (*QualityGate, error) {
	var resource QualityGate
	err := ctx.ReadResource("sonarqube:index/qualityGate:QualityGate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QualityGate resources.
type qualityGateState struct {
	// Name of the quality gate to set as default
	IsDefault *bool   `pulumi:"isDefault"`
	Name      *string `pulumi:"name"`
}

type QualityGateState struct {
	// Name of the quality gate to set as default
	IsDefault pulumi.BoolPtrInput
	Name      pulumi.StringPtrInput
}

func (QualityGateState) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityGateState)(nil)).Elem()
}

type qualityGateArgs struct {
	// Name of the quality gate to set as default
	IsDefault *bool   `pulumi:"isDefault"`
	Name      *string `pulumi:"name"`
}

// The set of arguments for constructing a QualityGate resource.
type QualityGateArgs struct {
	// Name of the quality gate to set as default
	IsDefault pulumi.BoolPtrInput
	Name      pulumi.StringPtrInput
}

func (QualityGateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityGateArgs)(nil)).Elem()
}

type QualityGateInput interface {
	pulumi.Input

	ToQualityGateOutput() QualityGateOutput
	ToQualityGateOutputWithContext(ctx context.Context) QualityGateOutput
}

func (*QualityGate) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityGate)(nil)).Elem()
}

func (i *QualityGate) ToQualityGateOutput() QualityGateOutput {
	return i.ToQualityGateOutputWithContext(context.Background())
}

func (i *QualityGate) ToQualityGateOutputWithContext(ctx context.Context) QualityGateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityGateOutput)
}

// QualityGateArrayInput is an input type that accepts QualityGateArray and QualityGateArrayOutput values.
// You can construct a concrete instance of `QualityGateArrayInput` via:
//
//          QualityGateArray{ QualityGateArgs{...} }
type QualityGateArrayInput interface {
	pulumi.Input

	ToQualityGateArrayOutput() QualityGateArrayOutput
	ToQualityGateArrayOutputWithContext(context.Context) QualityGateArrayOutput
}

type QualityGateArray []QualityGateInput

func (QualityGateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityGate)(nil)).Elem()
}

func (i QualityGateArray) ToQualityGateArrayOutput() QualityGateArrayOutput {
	return i.ToQualityGateArrayOutputWithContext(context.Background())
}

func (i QualityGateArray) ToQualityGateArrayOutputWithContext(ctx context.Context) QualityGateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityGateArrayOutput)
}

// QualityGateMapInput is an input type that accepts QualityGateMap and QualityGateMapOutput values.
// You can construct a concrete instance of `QualityGateMapInput` via:
//
//          QualityGateMap{ "key": QualityGateArgs{...} }
type QualityGateMapInput interface {
	pulumi.Input

	ToQualityGateMapOutput() QualityGateMapOutput
	ToQualityGateMapOutputWithContext(context.Context) QualityGateMapOutput
}

type QualityGateMap map[string]QualityGateInput

func (QualityGateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityGate)(nil)).Elem()
}

func (i QualityGateMap) ToQualityGateMapOutput() QualityGateMapOutput {
	return i.ToQualityGateMapOutputWithContext(context.Background())
}

func (i QualityGateMap) ToQualityGateMapOutputWithContext(ctx context.Context) QualityGateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityGateMapOutput)
}

type QualityGateOutput struct{ *pulumi.OutputState }

func (QualityGateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityGate)(nil)).Elem()
}

func (o QualityGateOutput) ToQualityGateOutput() QualityGateOutput {
	return o
}

func (o QualityGateOutput) ToQualityGateOutputWithContext(ctx context.Context) QualityGateOutput {
	return o
}

type QualityGateArrayOutput struct{ *pulumi.OutputState }

func (QualityGateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityGate)(nil)).Elem()
}

func (o QualityGateArrayOutput) ToQualityGateArrayOutput() QualityGateArrayOutput {
	return o
}

func (o QualityGateArrayOutput) ToQualityGateArrayOutputWithContext(ctx context.Context) QualityGateArrayOutput {
	return o
}

func (o QualityGateArrayOutput) Index(i pulumi.IntInput) QualityGateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QualityGate {
		return vs[0].([]*QualityGate)[vs[1].(int)]
	}).(QualityGateOutput)
}

type QualityGateMapOutput struct{ *pulumi.OutputState }

func (QualityGateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityGate)(nil)).Elem()
}

func (o QualityGateMapOutput) ToQualityGateMapOutput() QualityGateMapOutput {
	return o
}

func (o QualityGateMapOutput) ToQualityGateMapOutputWithContext(ctx context.Context) QualityGateMapOutput {
	return o
}

func (o QualityGateMapOutput) MapIndex(k pulumi.StringInput) QualityGateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QualityGate {
		return vs[0].(map[string]*QualityGate)[vs[1].(string)]
	}).(QualityGateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QualityGateInput)(nil)).Elem(), &QualityGate{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityGateArrayInput)(nil)).Elem(), QualityGateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityGateMapInput)(nil)).Elem(), QualityGateMap{})
	pulumi.RegisterOutputType(QualityGateOutput{})
	pulumi.RegisterOutputType(QualityGateArrayOutput{})
	pulumi.RegisterOutputType(QualityGateMapOutput{})
}
