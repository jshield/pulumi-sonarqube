// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sonarqube

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QualityProfileActivateRule struct {
	pulumi.CustomResourceState

	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringOutput `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrOutput `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrOutput `pulumi:"reset"`
	// Rule key
	Rule pulumi.StringOutput `pulumi:"rule"`
	// Rule severity
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
}

// NewQualityProfileActivateRule registers a new resource with the given unique name, arguments, and options.
func NewQualityProfileActivateRule(ctx *pulumi.Context,
	name string, args *QualityProfileActivateRuleArgs, opts ...pulumi.ResourceOption) (*QualityProfileActivateRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	var resource QualityProfileActivateRule
	err := ctx.RegisterResource("sonarqube:index/qualityProfileActivateRule:QualityProfileActivateRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQualityProfileActivateRule gets an existing QualityProfileActivateRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQualityProfileActivateRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QualityProfileActivateRuleState, opts ...pulumi.ResourceOption) (*QualityProfileActivateRule, error) {
	var resource QualityProfileActivateRule
	err := ctx.ReadResource("sonarqube:index/qualityProfileActivateRule:QualityProfileActivateRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QualityProfileActivateRule resources.
type qualityProfileActivateRuleState struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key *string `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params *string `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset *string `pulumi:"reset"`
	// Rule key
	Rule *string `pulumi:"rule"`
	// Rule severity
	Severity *string `pulumi:"severity"`
}

type QualityProfileActivateRuleState struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringPtrInput
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrInput
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrInput
	// Rule key
	Rule pulumi.StringPtrInput
	// Rule severity
	Severity pulumi.StringPtrInput
}

func (QualityProfileActivateRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityProfileActivateRuleState)(nil)).Elem()
}

type qualityProfileActivateRuleArgs struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key string `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params *string `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset *string `pulumi:"reset"`
	// Rule key
	Rule string `pulumi:"rule"`
	// Rule severity
	Severity *string `pulumi:"severity"`
}

// The set of arguments for constructing a QualityProfileActivateRule resource.
type QualityProfileActivateRuleArgs struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringInput
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrInput
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrInput
	// Rule key
	Rule pulumi.StringInput
	// Rule severity
	Severity pulumi.StringPtrInput
}

func (QualityProfileActivateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityProfileActivateRuleArgs)(nil)).Elem()
}

type QualityProfileActivateRuleInput interface {
	pulumi.Input

	ToQualityProfileActivateRuleOutput() QualityProfileActivateRuleOutput
	ToQualityProfileActivateRuleOutputWithContext(ctx context.Context) QualityProfileActivateRuleOutput
}

func (*QualityProfileActivateRule) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityProfileActivateRule)(nil)).Elem()
}

func (i *QualityProfileActivateRule) ToQualityProfileActivateRuleOutput() QualityProfileActivateRuleOutput {
	return i.ToQualityProfileActivateRuleOutputWithContext(context.Background())
}

func (i *QualityProfileActivateRule) ToQualityProfileActivateRuleOutputWithContext(ctx context.Context) QualityProfileActivateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileActivateRuleOutput)
}

// QualityProfileActivateRuleArrayInput is an input type that accepts QualityProfileActivateRuleArray and QualityProfileActivateRuleArrayOutput values.
// You can construct a concrete instance of `QualityProfileActivateRuleArrayInput` via:
//
//          QualityProfileActivateRuleArray{ QualityProfileActivateRuleArgs{...} }
type QualityProfileActivateRuleArrayInput interface {
	pulumi.Input

	ToQualityProfileActivateRuleArrayOutput() QualityProfileActivateRuleArrayOutput
	ToQualityProfileActivateRuleArrayOutputWithContext(context.Context) QualityProfileActivateRuleArrayOutput
}

type QualityProfileActivateRuleArray []QualityProfileActivateRuleInput

func (QualityProfileActivateRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityProfileActivateRule)(nil)).Elem()
}

func (i QualityProfileActivateRuleArray) ToQualityProfileActivateRuleArrayOutput() QualityProfileActivateRuleArrayOutput {
	return i.ToQualityProfileActivateRuleArrayOutputWithContext(context.Background())
}

func (i QualityProfileActivateRuleArray) ToQualityProfileActivateRuleArrayOutputWithContext(ctx context.Context) QualityProfileActivateRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileActivateRuleArrayOutput)
}

// QualityProfileActivateRuleMapInput is an input type that accepts QualityProfileActivateRuleMap and QualityProfileActivateRuleMapOutput values.
// You can construct a concrete instance of `QualityProfileActivateRuleMapInput` via:
//
//          QualityProfileActivateRuleMap{ "key": QualityProfileActivateRuleArgs{...} }
type QualityProfileActivateRuleMapInput interface {
	pulumi.Input

	ToQualityProfileActivateRuleMapOutput() QualityProfileActivateRuleMapOutput
	ToQualityProfileActivateRuleMapOutputWithContext(context.Context) QualityProfileActivateRuleMapOutput
}

type QualityProfileActivateRuleMap map[string]QualityProfileActivateRuleInput

func (QualityProfileActivateRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityProfileActivateRule)(nil)).Elem()
}

func (i QualityProfileActivateRuleMap) ToQualityProfileActivateRuleMapOutput() QualityProfileActivateRuleMapOutput {
	return i.ToQualityProfileActivateRuleMapOutputWithContext(context.Background())
}

func (i QualityProfileActivateRuleMap) ToQualityProfileActivateRuleMapOutputWithContext(ctx context.Context) QualityProfileActivateRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileActivateRuleMapOutput)
}

type QualityProfileActivateRuleOutput struct{ *pulumi.OutputState }

func (QualityProfileActivateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityProfileActivateRule)(nil)).Elem()
}

func (o QualityProfileActivateRuleOutput) ToQualityProfileActivateRuleOutput() QualityProfileActivateRuleOutput {
	return o
}

func (o QualityProfileActivateRuleOutput) ToQualityProfileActivateRuleOutputWithContext(ctx context.Context) QualityProfileActivateRuleOutput {
	return o
}

type QualityProfileActivateRuleArrayOutput struct{ *pulumi.OutputState }

func (QualityProfileActivateRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityProfileActivateRule)(nil)).Elem()
}

func (o QualityProfileActivateRuleArrayOutput) ToQualityProfileActivateRuleArrayOutput() QualityProfileActivateRuleArrayOutput {
	return o
}

func (o QualityProfileActivateRuleArrayOutput) ToQualityProfileActivateRuleArrayOutputWithContext(ctx context.Context) QualityProfileActivateRuleArrayOutput {
	return o
}

func (o QualityProfileActivateRuleArrayOutput) Index(i pulumi.IntInput) QualityProfileActivateRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QualityProfileActivateRule {
		return vs[0].([]*QualityProfileActivateRule)[vs[1].(int)]
	}).(QualityProfileActivateRuleOutput)
}

type QualityProfileActivateRuleMapOutput struct{ *pulumi.OutputState }

func (QualityProfileActivateRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityProfileActivateRule)(nil)).Elem()
}

func (o QualityProfileActivateRuleMapOutput) ToQualityProfileActivateRuleMapOutput() QualityProfileActivateRuleMapOutput {
	return o
}

func (o QualityProfileActivateRuleMapOutput) ToQualityProfileActivateRuleMapOutputWithContext(ctx context.Context) QualityProfileActivateRuleMapOutput {
	return o
}

func (o QualityProfileActivateRuleMapOutput) MapIndex(k pulumi.StringInput) QualityProfileActivateRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QualityProfileActivateRule {
		return vs[0].(map[string]*QualityProfileActivateRule)[vs[1].(string)]
	}).(QualityProfileActivateRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileActivateRuleInput)(nil)).Elem(), &QualityProfileActivateRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileActivateRuleArrayInput)(nil)).Elem(), QualityProfileActivateRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileActivateRuleMapInput)(nil)).Elem(), QualityProfileActivateRuleMap{})
	pulumi.RegisterOutputType(QualityProfileActivateRuleOutput{})
	pulumi.RegisterOutputType(QualityProfileActivateRuleArrayOutput{})
	pulumi.RegisterOutputType(QualityProfileActivateRuleMapOutput{})
}
