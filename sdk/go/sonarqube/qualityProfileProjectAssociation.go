// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sonarqube

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type QualityProfileProjectAssociation struct {
	pulumi.CustomResourceState

	// Quality profile language
	Language pulumi.StringOutput `pulumi:"language"`
	// Project key
	Project pulumi.StringOutput `pulumi:"project"`
	// Quality profile name
	QualityProfile pulumi.StringOutput `pulumi:"qualityProfile"`
}

// NewQualityProfileProjectAssociation registers a new resource with the given unique name, arguments, and options.
func NewQualityProfileProjectAssociation(ctx *pulumi.Context,
	name string, args *QualityProfileProjectAssociationArgs, opts ...pulumi.ResourceOption) (*QualityProfileProjectAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Language == nil {
		return nil, errors.New("invalid value for required argument 'Language'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.QualityProfile == nil {
		return nil, errors.New("invalid value for required argument 'QualityProfile'")
	}
	var resource QualityProfileProjectAssociation
	err := ctx.RegisterResource("sonarqube:index/qualityProfileProjectAssociation:QualityProfileProjectAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQualityProfileProjectAssociation gets an existing QualityProfileProjectAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQualityProfileProjectAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QualityProfileProjectAssociationState, opts ...pulumi.ResourceOption) (*QualityProfileProjectAssociation, error) {
	var resource QualityProfileProjectAssociation
	err := ctx.ReadResource("sonarqube:index/qualityProfileProjectAssociation:QualityProfileProjectAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QualityProfileProjectAssociation resources.
type qualityProfileProjectAssociationState struct {
	// Quality profile language
	Language *string `pulumi:"language"`
	// Project key
	Project *string `pulumi:"project"`
	// Quality profile name
	QualityProfile *string `pulumi:"qualityProfile"`
}

type QualityProfileProjectAssociationState struct {
	// Quality profile language
	Language pulumi.StringPtrInput
	// Project key
	Project pulumi.StringPtrInput
	// Quality profile name
	QualityProfile pulumi.StringPtrInput
}

func (QualityProfileProjectAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityProfileProjectAssociationState)(nil)).Elem()
}

type qualityProfileProjectAssociationArgs struct {
	// Quality profile language
	Language string `pulumi:"language"`
	// Project key
	Project string `pulumi:"project"`
	// Quality profile name
	QualityProfile string `pulumi:"qualityProfile"`
}

// The set of arguments for constructing a QualityProfileProjectAssociation resource.
type QualityProfileProjectAssociationArgs struct {
	// Quality profile language
	Language pulumi.StringInput
	// Project key
	Project pulumi.StringInput
	// Quality profile name
	QualityProfile pulumi.StringInput
}

func (QualityProfileProjectAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityProfileProjectAssociationArgs)(nil)).Elem()
}

type QualityProfileProjectAssociationInput interface {
	pulumi.Input

	ToQualityProfileProjectAssociationOutput() QualityProfileProjectAssociationOutput
	ToQualityProfileProjectAssociationOutputWithContext(ctx context.Context) QualityProfileProjectAssociationOutput
}

func (*QualityProfileProjectAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityProfileProjectAssociation)(nil)).Elem()
}

func (i *QualityProfileProjectAssociation) ToQualityProfileProjectAssociationOutput() QualityProfileProjectAssociationOutput {
	return i.ToQualityProfileProjectAssociationOutputWithContext(context.Background())
}

func (i *QualityProfileProjectAssociation) ToQualityProfileProjectAssociationOutputWithContext(ctx context.Context) QualityProfileProjectAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileProjectAssociationOutput)
}

// QualityProfileProjectAssociationArrayInput is an input type that accepts QualityProfileProjectAssociationArray and QualityProfileProjectAssociationArrayOutput values.
// You can construct a concrete instance of `QualityProfileProjectAssociationArrayInput` via:
//
//          QualityProfileProjectAssociationArray{ QualityProfileProjectAssociationArgs{...} }
type QualityProfileProjectAssociationArrayInput interface {
	pulumi.Input

	ToQualityProfileProjectAssociationArrayOutput() QualityProfileProjectAssociationArrayOutput
	ToQualityProfileProjectAssociationArrayOutputWithContext(context.Context) QualityProfileProjectAssociationArrayOutput
}

type QualityProfileProjectAssociationArray []QualityProfileProjectAssociationInput

func (QualityProfileProjectAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityProfileProjectAssociation)(nil)).Elem()
}

func (i QualityProfileProjectAssociationArray) ToQualityProfileProjectAssociationArrayOutput() QualityProfileProjectAssociationArrayOutput {
	return i.ToQualityProfileProjectAssociationArrayOutputWithContext(context.Background())
}

func (i QualityProfileProjectAssociationArray) ToQualityProfileProjectAssociationArrayOutputWithContext(ctx context.Context) QualityProfileProjectAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileProjectAssociationArrayOutput)
}

// QualityProfileProjectAssociationMapInput is an input type that accepts QualityProfileProjectAssociationMap and QualityProfileProjectAssociationMapOutput values.
// You can construct a concrete instance of `QualityProfileProjectAssociationMapInput` via:
//
//          QualityProfileProjectAssociationMap{ "key": QualityProfileProjectAssociationArgs{...} }
type QualityProfileProjectAssociationMapInput interface {
	pulumi.Input

	ToQualityProfileProjectAssociationMapOutput() QualityProfileProjectAssociationMapOutput
	ToQualityProfileProjectAssociationMapOutputWithContext(context.Context) QualityProfileProjectAssociationMapOutput
}

type QualityProfileProjectAssociationMap map[string]QualityProfileProjectAssociationInput

func (QualityProfileProjectAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityProfileProjectAssociation)(nil)).Elem()
}

func (i QualityProfileProjectAssociationMap) ToQualityProfileProjectAssociationMapOutput() QualityProfileProjectAssociationMapOutput {
	return i.ToQualityProfileProjectAssociationMapOutputWithContext(context.Background())
}

func (i QualityProfileProjectAssociationMap) ToQualityProfileProjectAssociationMapOutputWithContext(ctx context.Context) QualityProfileProjectAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityProfileProjectAssociationMapOutput)
}

type QualityProfileProjectAssociationOutput struct{ *pulumi.OutputState }

func (QualityProfileProjectAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityProfileProjectAssociation)(nil)).Elem()
}

func (o QualityProfileProjectAssociationOutput) ToQualityProfileProjectAssociationOutput() QualityProfileProjectAssociationOutput {
	return o
}

func (o QualityProfileProjectAssociationOutput) ToQualityProfileProjectAssociationOutputWithContext(ctx context.Context) QualityProfileProjectAssociationOutput {
	return o
}

type QualityProfileProjectAssociationArrayOutput struct{ *pulumi.OutputState }

func (QualityProfileProjectAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityProfileProjectAssociation)(nil)).Elem()
}

func (o QualityProfileProjectAssociationArrayOutput) ToQualityProfileProjectAssociationArrayOutput() QualityProfileProjectAssociationArrayOutput {
	return o
}

func (o QualityProfileProjectAssociationArrayOutput) ToQualityProfileProjectAssociationArrayOutputWithContext(ctx context.Context) QualityProfileProjectAssociationArrayOutput {
	return o
}

func (o QualityProfileProjectAssociationArrayOutput) Index(i pulumi.IntInput) QualityProfileProjectAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QualityProfileProjectAssociation {
		return vs[0].([]*QualityProfileProjectAssociation)[vs[1].(int)]
	}).(QualityProfileProjectAssociationOutput)
}

type QualityProfileProjectAssociationMapOutput struct{ *pulumi.OutputState }

func (QualityProfileProjectAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityProfileProjectAssociation)(nil)).Elem()
}

func (o QualityProfileProjectAssociationMapOutput) ToQualityProfileProjectAssociationMapOutput() QualityProfileProjectAssociationMapOutput {
	return o
}

func (o QualityProfileProjectAssociationMapOutput) ToQualityProfileProjectAssociationMapOutputWithContext(ctx context.Context) QualityProfileProjectAssociationMapOutput {
	return o
}

func (o QualityProfileProjectAssociationMapOutput) MapIndex(k pulumi.StringInput) QualityProfileProjectAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QualityProfileProjectAssociation {
		return vs[0].(map[string]*QualityProfileProjectAssociation)[vs[1].(string)]
	}).(QualityProfileProjectAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileProjectAssociationInput)(nil)).Elem(), &QualityProfileProjectAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileProjectAssociationArrayInput)(nil)).Elem(), QualityProfileProjectAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityProfileProjectAssociationMapInput)(nil)).Elem(), QualityProfileProjectAssociationMap{})
	pulumi.RegisterOutputType(QualityProfileProjectAssociationOutput{})
	pulumi.RegisterOutputType(QualityProfileProjectAssociationArrayOutput{})
	pulumi.RegisterOutputType(QualityProfileProjectAssociationMapOutput{})
}
